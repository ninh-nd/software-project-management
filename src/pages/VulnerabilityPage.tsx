import { AddOutlined } from "@mui/icons-material";
import {
  Box,
  Button,
  Card,
  CardContent,
  CardHeader,
  Container,
  Grid,
} from "@mui/material";
import {
  DataGrid,
  GridColDef,
  GridToolbarContainer,
  GridToolbarQuickFilter,
} from "@mui/x-data-grid";
import * as React from "react";
import AddThreatDialog from "~/components/vulnerabilities/dialog/AddThreatDialog";
import AddVulnDialog from "~/components/vulnerabilities/dialog/AddVulnDialog";
import MostCommonSeverity from "~/components/vulnerabilities/featuredInfo/MostCommonSeverity";
import TotalThreats from "~/components/vulnerabilities/featuredInfo/TotalThreats";
import TotalVulnerabilities from "~/components/vulnerabilities/featuredInfo/TotalVulnerabilities";
import { useThreatsQuery, useVulnsQuery } from "~/hooks/query";
function EditToolbar({ setOpen }: { setOpen: (open: boolean) => void }) {
  const addRecord = () => {
    setOpen(true);
  };
  return (
    <GridToolbarContainer sx={{ justifyContent: "space-between" }}>
      <Button color="primary" startIcon={<AddOutlined />} onClick={addRecord}>
        Add record
      </Button>
      <GridToolbarQuickFilter />
    </GridToolbarContainer>
  );
}

export default function VulnerabilityPage() {
  const [openAddVuln, setOpenAddVuln] = React.useState(false);
  const [openAddThreat, setOpenAddThreat] = React.useState(false);
  const threatColumns: GridColDef[] = [
    { field: "name", headerName: "Name", flex: 0.4 },
    { field: "description", headerName: "Description", flex: 1 },
  ];
  const vulnColumns: GridColDef[] = [
    { field: "cveId", headerName: "CVE-ID", flex: 1 },
    { field: "product", headerName: "Product", flex: 1 },
    { field: "version", headerName: "Version", flex: 1 },
    { field: "vendor", headerName: "Vendor", flex: 1 },
    { field: "score", headerName: "Score", flex: 1 },
    {
      field: "severity",
      headerName: "Severity",
      flex: 1,
      renderCell: (params) => (
        <Box
          sx={{
            color:
              params.value === "High"
                ? "error.main"
                : params.value === "Medium"
                ? "warning.main"
                : "success.main",
          }}
        >
          {params.value}
        </Box>
      ),
    },
    { field: "cwes", headerName: "CWE-ID", flex: 1 },
  ];
  const getVulQuery = useVulnsQuery();
  const getThreatQuery = useThreatsQuery();
  const threats = getThreatQuery.data?.data ?? [];
  const vulns = getVulQuery.data?.data ?? [];
  const mostCommonSeverity = (function () {
    let lowCount = 0;
    let mediumCount = 0;
    let highCount = 0;
    vulns.forEach((vuln) => {
      if (vuln.severity === "Low") {
        lowCount++;
      } else if (vuln.severity === "Medium") {
        mediumCount++;
      } else {
        highCount++;
      }
    });
    if (lowCount > mediumCount && lowCount > highCount) {
      return "Low";
    }
    if (mediumCount > lowCount && mediumCount > highCount) {
      return "Medium";
    }
    return "High";
  })();
  return (
    <Box sx={{ flexGrow: 1, height: "100vh" }}>
      <Container sx={{ mt: 4, mb: 4 }}>
        <Grid container spacing={3}>
          <Grid item xs={12} sm={6}>
            <TotalVulnerabilities total={vulns.length} />
          </Grid>
          <Grid item xs={12} sm={6}>
            <TotalThreats total={threats.length} />
          </Grid>
          <Grid item xs={12} sm={12}>
            <MostCommonSeverity severity={mostCommonSeverity} />
          </Grid>
          <Grid item xs={12}>
            <Card>
              <CardHeader title="Vulnerabilities" />
              <CardContent>
                <DataGrid
                  autoHeight
                  columns={vulnColumns}
                  rows={vulns}
                  disableColumnFilter
                  disableColumnSelector
                  disableDensitySelector
                  components={{
                    Toolbar: EditToolbar,
                  }}
                  componentsProps={{
                    toolbar: {
                      showQuickFilter: true,
                      quickFilterProps: { debounceMs: 500 },
                      setOpen: setOpenAddVuln,
                    },
                  }}
                  getRowId={(row) => row.cveId}
                />
                <AddVulnDialog open={openAddVuln} setOpen={setOpenAddVuln} />
              </CardContent>
            </Card>
          </Grid>
          <Grid item xs={12}>
            <Card>
              <CardHeader title="Threats" />
              <CardContent>
                <DataGrid
                  autoHeight
                  columns={threatColumns}
                  rows={threats}
                  disableColumnFilter
                  disableColumnSelector
                  disableDensitySelector
                  components={{
                    Toolbar: EditToolbar,
                  }}
                  componentsProps={{
                    toolbar: {
                      showQuickFilter: true,
                      quickFilterProps: { debounceMs: 500 },
                      setOpen: setOpenAddThreat,
                    },
                  }}
                  getRowId={(row) => row._id}
                />
                <AddThreatDialog
                  open={openAddThreat}
                  setOpen={setOpenAddThreat}
                />
              </CardContent>
            </Card>
          </Grid>
        </Grid>
      </Container>
    </Box>
  );
}
